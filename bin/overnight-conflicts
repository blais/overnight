#!/usr/bin/env python3
"""Identify trades with upcoming earnings that have conflicts with existing positions.

This fetches the list of positions from a Tastyworks account and lists those
which have conflicting earnings. Those positions should get assessed for
suitability across the upcoming announcement (and adjusted accordingly).

TODO: Convert this to use Johnny instead of connecting to TW, which would
automatically support all included brokers.
"""
__copyright__ = "Copyright (C) 2021  Martin Blais"
__license__ = "GNU GPLv2"

from typing import Optional

import click

from goodkids import session as sesslib
from goodkids import utils
from johnny.base.etl import petl
from johnny.sources.tastyworks_csv import symbols as twsym
from overnight import positions


@click.command()
@click.argument('symbols_filename', type=click.Path(exists=True))
@click.option('--username', '-u', help="Tastyworks username.")
@click.option('--password') # Tastyworks password.
def main(symbols_filename: str, username: Optional[str], password: Optional[str]):
    # Fetch the list of positions from Tastyworks.
    session = sesslib.get_session(username, password)
    position_underlyings = positions.get_position_underlyings(session)

    # Read a list of symbols.
    symbols_table = petl.fromcsv(symbols_filename)
    earnings_underlyings = set(symbols_table.values('Symbol'))

    # Render the common set.
    conflicts = position_underlyings & earnings_underlyings
    if conflicts:
        print("# Overlapping positions with earnings:")
        for stock in conflicts:
            print(stock)


if __name__ == '__main__':
    main()
